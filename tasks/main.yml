---
- hosts: localhost
  connection: local
  gather_facts: false

  tasks:

  ###############
  # Create new Digital Ocean Droplet
  # size_id=1gb               : $5 per month
  # region_id=sfo1            : San Francisco 1
  # image_id=ubuntu-16-04-x64 : ubuntu-16-04-x64
  - name: Create new Digital Ocean Droplet
    digital_ocean:
      state: present
      command: droplet
      name: wiki.mebooks.co.nz
      api_token: "{{ ansible_role_digital_ocean.api_token }}"
      size_id: "{{ ansible_role_digital_ocean.size_id }}"
      region_id: "{{ ansible_role_digital_ocean.region_id }}"
      image_id: "{{ ansible_role_digital_ocean.image_id }}"
      ssh_key_ids: "{{ ansible_role_digital_ocean.ssh_key_ids }}"
      wait_timeout: 500
    register: remote
    tags: digital_ocean

  - name: debug
    debug: var=remote
    tags: digital_ocean

  - name: Print working directory
    local_action: shell pwd
    register: pwd
    tags: digital_ocean_local

  - debug: var=pwd.stdout
    tags: digital_ocean

  - name: Add new host to our in-memory inventory.
    add_host:
      name: "{{ remote.droplet.ip_address }}"
      groups: droplets
    when: remote.droplet is defined
    tags: digital_ocean

  - name: Remove any previously created instance(s) from the host group
    local_action: lineinfile
                  dest="../../../hosts"
                  regexp='^[\d\.]+ ansible_connection=ssh ansible_user=root'
                  state=absent
    tags: digital_ocean

  - name: Add the newly created instance(s) to the host group
    local_action: lineinfile
                  dest="../../../hosts"
                  regexp='^'
                  insertafter="\[droplets\]" line="{{ remote.droplet.ip_address }} ansible_connection=ssh ansible_user=root"
    tags: digital_ocean

  - name: Wait for SSH to come up
    local_action: wait_for
                  host={{ remote.droplet.ip_address }}
                  port=22
                  state=started
    tags: digital_ocean
